{"version":3,"sources":["Card.js","Board.js","Game.js","index.js"],"names":["Card","props","cover","hidden","className","onClick","value","Board","useState","cells","setCells","counter","setCounter","history","setHistory","renderCell","i","handleClick","updatedArr","useEffect","console","log","resetVision","clearArr","length","arr","Game","shuffledArr","j","Math","floor","random","shuffle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dffa3ad2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Card(props) {\r\n\tlet cover = \"\";\r\n\t\r\n\tif (props.hidden) {\r\n\t\tcover = \"cardHidden\"\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className = {\"card \" + cover} onClick = {props.onClick}>\r\n\t\t\t{props.value}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Card\r\n","import React, { useState, useEffect } from 'react';\r\nimport Card from \"./Card\"\r\n\r\nfunction Board(props) {\r\n\r\n\tconst [cells, setCells] = useState(props.cells)\r\n\tconst [counter, setCounter] = useState(0)\r\n\tconst [history, setHistory] = useState([])\r\n\r\n\tconst renderCell = (i) => {\r\n\t\treturn <Card value={cells[i].value} hidden={cells[i].hidden} onClick={() => handleClick(i)} />\r\n\t}\r\n\r\n\tconst handleClick = (i) => {\r\n\t\tif (!cells[i].hidden) return;\r\n\t\tlet updatedArr = [...cells]\r\n\t\tupdatedArr[i].hidden = false;\r\n\t\tsetCells(updatedArr)\r\n\t\tsetCounter(counter + 1)\r\n\t\tsetHistory(() => {\r\n\t\t\treturn [...history, cells[i]]\r\n\t\t})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(counter,history);\r\n\t\t\r\n\t\tif (counter == 2) {\r\n\t\t\tif (history[0].value != history[1].value) {\r\n\t\t\t\tresetVision()\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\tsetCounter(0)\r\n\t\t\t\t\tsetHistory(() => {\r\n\t\t\t\t\t\treturn []\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\t\tsetCounter(0)\r\n\t\t\t\t\tsetHistory(() => {\r\n\t\t\t\t\t\treturn []\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t)\r\n\r\n\tconst resetVision = () => {\r\n\t\tlet clearArr = [...cells];\r\n\t\tfor (let i = 0; i < clearArr.length; i++) {\r\n\t\t\tclearArr[i].hidden = true;\r\n\t\t}\r\n\t\tsetCells(clearArr)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"board\">\r\n\t\t\t<div className=\"board__row\">\r\n\t\t\t\t{renderCell(0)}\r\n\t\t\t\t{renderCell(1)}\r\n\t\t\t\t{renderCell(2)}\r\n\t\t\t\t{renderCell(3)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"board__row\">\r\n\t\t\t\t{renderCell(4)}\r\n\t\t\t\t{renderCell(5)}\r\n\t\t\t\t{renderCell(6)}\r\n\t\t\t\t{renderCell(7)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"board__row\">\r\n\t\t\t\t{renderCell(8)}\r\n\t\t\t\t{renderCell(9)}\r\n\t\t\t\t{renderCell(10)}\r\n\t\t\t\t{renderCell(11)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"board__row\">\r\n\t\t\t\t{renderCell(12)}\r\n\t\t\t\t{renderCell(13)}\r\n\t\t\t\t{renderCell(14)}\r\n\t\t\t\t{renderCell(15)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Board\r\n","import React from 'react';\r\nimport Board from './Board';\r\n\r\nconst arr = [\r\n\t{\r\n\t\tvalue: 1,\r\n\t\thidden: true,\r\n\t},\r\n\t{\r\n\t\tvalue: 1,\r\n\t\thidden: true,\r\n\t},\r\n\t{\r\n\t\tvalue: 2,\r\n\t\thidden: true,\r\n\t},\r\n\t{\r\n\t\tvalue: 2,\r\n\t\thidden: true,\r\n\t},\r\n\t{\r\n\t\tvalue: 3,\r\n\t\thidden: true,\r\n\t},\r\n\t{\r\n\t\tvalue: 3,\r\n\t\thidden: true,\r\n\t},\r\n\t{\r\n\t\tvalue: 4,\r\n\t\thidden: true,\r\n\t},\r\n\t{\r\n\t\tvalue: 4,\r\n\t\thidden: true,\r\n\t}, {\r\n\t\tvalue: 5,\r\n\t\thidden: true,\r\n\t},\r\n\t{\r\n\t\tvalue: 5,\r\n\t\thidden: true,\r\n\t},\r\n\t{\r\n\t\tvalue: 6,\r\n\t\thidden: true,\r\n\t},\r\n\t{\r\n\t\tvalue: 6,\r\n\t\thidden: true,\r\n\t},\r\n\t{\r\n\t\tvalue: 7,\r\n\t\thidden: true,\r\n\t},\r\n\t{\r\n\t\tvalue: 7,\r\n\t\thidden: true,\r\n\t},\r\n\t{\r\n\t\tvalue: 8,\r\n\t\thidden: true,\r\n\t},\r\n\t{\r\n\t\tvalue: 8,\r\n\t\thidden: true,\r\n\t},\r\n]\r\n\r\nfunction Game(props) {\r\n\t\r\n\tconst shuffle = (cells) => {\r\n\t\tlet shuffledArr = [...cells];\r\n\t\tfor (let i = shuffledArr.length - 1; i > 0; i--) {\r\n\t\t\tlet j = Math.floor(Math.random() * (i + 1));\r\n\t\t\t[shuffledArr[i].value, shuffledArr[j].value] = [shuffledArr[j].value, shuffledArr[i].value];\r\n\t\t}\r\n\t\treturn shuffledArr;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"game\">\r\n\t\t\t<h1 className=\"game__title\">\r\n\t\t\t\tMatch Card!\r\n\t\t\t</h1>\r\n\t\t\t<p className=\"game__description\">Reload page for restart</p>\r\n\t\t\t<Board cells={shuffle(arr)}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Game","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './Game';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n\t<Game />,\r\n\tdocument.getElementById('root')\r\n);"],"sourceRoot":""}